name: CI / CD Pipline
on:
  push:
    branches: [main]
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    # Steps
    steps:
      # Step 1
      - uses: actions/checkout@v2

      # Step 2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64

      # Step3
      - name: Install VirtualEnv
        run: pip3 install virtualenv

      # Step 4
      - name: Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Step 5
      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      # Install all the app dependencies
      - name: Install dependencies
        run: pip3 install -r requirements.txt

      # Step 6
      - name: Activate env and run tests
        run: venv/bin/activate && pytest

      # Step 7
      - name: create the Zipfile archives of the Depencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .

      # Step 8
      - name: Add App to Zip file
        run: cd app && zip -g ../api.zip -r .

      # Step 9
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1
      - name: install aws cli
        uses: unfor19/install-aws-cli-action@v1
        with:
            version: 1
        env: 
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            AWS_DEFAULT_REGION : ${{secrets.AWS_DEFAULT_REGION}}
      
      # Step 2
      - name: Download lambda api.zip
        uses: actions/download-artifact@v2
        with: 
          name : api

      # Step3
      - name :  Upload to S3
        run : aws s3 cp api.zip s3://fastapi-cicd/api.zip
        env: 
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            AWS_DEFAULT_REGION : ${{secrets.AWS_DEFAULT_REGION}}
      
      # Step 4
      - name : Upload zip to lambda
        run: aws lambda update-function-code --function-name fastapi-cicd --s3-bucket fastapi-cicd --s3-key api.zip
        env: 
            AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
            AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
            AWS_DEFAULT_REGION : ${{secrets.AWS_DEFAULT_REGION}}
          
